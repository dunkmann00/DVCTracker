"""Make the type column an Enum type

Revision ID: 82b7b8e092bb
Revises: 5335069d04aa
Create Date: 2022-06-16 10:52:24.776176

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "82b7b8e092bb"
down_revision = "5335069d04aa"
branch_labels = None
depends_on = None

# Hard code these to avoid problems in the future if the Enum is removed or
# changes. Plus now it isn't needed to be imported.
specialtypes = sa.Enum("DISC_POINTS", "PRECONFIRM", name="specialtypes")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    specialtypes.create(op.get_bind())

    op.drop_column("stored_specials", "type")

    op.add_column(
        "stored_specials", sa.Column("type", specialtypes, nullable=True)
    )

    # Since all specials are expected to have a type, we need to add a
    # placeholder type in order to avoid processing errors the next time we go
    # to update. We are also doing it with a SQL string rather than building the
    # query from model objects because this way, if something happens and the
    # model isn't there or changes in the future, the query will still be able
    # to execute as expected.
    op.execute("UPDATE stored_specials SET type='PRECONFIRM'")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("stored_specials", "type")

    op.add_column(
        "stored_specials",
        sa.Column("type", sa.String(length=15), nullable=True),
    )

    specialtypes.drop(op.get_bind())

    # Similar to upgrade we are going to fill this with placeholder data
    op.execute("UPDATE stored_specials SET type='preconfirm'")
    # ### end Alembic commands ###
